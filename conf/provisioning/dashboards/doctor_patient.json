{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Patient view",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1654119404643,
  "links": [
    {
      "icon": "dashboard",
      "tags": [],
      "title": "Accueil",
      "tooltip": "",
      "type": "link",
      "url": "/"
    }
  ],
  "panels": [
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "aura-influxDB",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 16,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "ECG ($tag_patient)",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "channel"
              ],
              "type": "tag"
            },
            {
              "params": [
                "patient"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "ecg",
          "orderByTime": "ASC",
          "policy": "autogen",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Tension (uV)"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "patient",
              "operator": "=~",
              "value": "/^$patient$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Electrocardiogram",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "cacheTimeout": null,
      "css_data": "",
      "datasource": null,
      "doInit": {},
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "format": "short",
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 0
      },
      "handleMetric": {},
      "html_data": "<b> Nom : </b>Capucine Durepos\n<br>\n<b>Age :</b> 27 ans\n<br>\n<b>Type d'Ã©pilepsie :</b> ...\n<br>\n...\n\n",
      "id": 10,
      "interval": null,
      "js_code": "",
      "js_init_code": "",
      "links": [],
      "maxDataPoints": 3,
      "nullPointMode": "connected",
      "pluginVersion": "7.3.4",
      "targets": [
        {
          "queryType": "randomWalk",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Patient",
      "type": "aidanmountford-html-panel"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "aura-influxDB",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 16,
        "x": 0,
        "y": 10
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "",
          "groupBy": [
            {
              "params": [
                "1s"
              ],
              "type": "time"
            },
            {
              "params": [
                "patient"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "features",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "SELECT ${features:raw} FROM \"autogen\".\"features\" WHERE (\"patient\" =~ /^$patient$/) AND $timeFilter",
          "queryType": "randomWalk",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "${features:raw}"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "patient",
              "operator": "=~",
              "value": "/^$patient$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "$features",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "aura-influxDB",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 10
      },
      "id": 12,
      "options": {
        "config": {
          "displayModeBar": false
        },
        "data": "",
        "layout": {
          "font": {
            "color": "darkgrey"
          },
          "margin": {
            "b": 30,
            "l": 100,
            "t": 10
          },
          "paper_bgcolor": "rgba(0,0,0,0)",
          "plot_bgcolor": "rgba(0,0,0,0)"
        },
        "onclick": "console.log(data)\nwindow.updateVariables({query:{'var-project':'test'}, partial: true})",
        "script": "// This file is NOT used in Grafana, it is simply a copy paste of the Javascript script used in the LIME bar chart with a slider\n\n// The queries used to make it work are the following : \n\n// QUERY A : \n// SELECT * FROM \"autogen\".\"features\" WHERE (\"patient\" =~ /^$patient$/) AND $timeFilter\n\n\n// Max number of feature to plot\nvar max_feature_number = 6\n\n// argsort function found online and modified so that it sorts in descending order and by absolute values\nlet descending_abs_argsort = a => a.map((v, i) => [v, i]).sort((a, b) => Math.abs(b[0]) - Math.abs(a[0])).map(i => i[1])\n\n\n// function to convert a unix timestamp to \"HH:MM:SS\"\nfunction full_timestamp_to_hour(unix_time){\n    if (typeof unix_time == 'string') {\n        unix_time = parseInt(unix_time)\n    }\n    let date = new Date(unix_time)\n    // padStarts adds enough 0 at the beginning make sure the string length is 2 (ex : 7 --> 07)\n    return String(date.getHours()).padStart(2,0) + ':' + String(date.getMinutes()).padStart(2,0) + ':' + String(date.getSeconds()).padStart(2, 0)\n};\n\n\n\nconsole.log(data)\nlet all_fields = data.series[0].fields\nlet timestamp = []\nlet lime_values = []\nlet lime_names = []\n\nfor (let j = 0; j < all_fields.length; j++) {\n    if (all_fields[j].name == \"Time\") {\n        timestamp = all_fields[j].values.buffer;\n    };\n    if (all_fields[j].name.substring(0, 11) == 'lime_values') {\n        lime_values.push(all_fields[j].values.buffer);\n        lime_names.push(all_fields[j].name.substring(12))\n    };\n};\n\nfunction extract_ith_lime_values(lime_values, lime_names, i){\n    let x = [];\n    let y = [];\n    let color = []\n    for (let j = 0; j< lime_values.length; j++){\n        if (lime_values[j][i] != null) {\n            x.push(lime_values[j][i]);\n            y.push(lime_names[j]);\n            if (lime_values[j][i] > 0) {\n                color.push(\"#23c43e\");\n            } else {\n                color.push(\"#eb4034\");\n            };\n        };\n    };\n\n    // Now that  we retrieved all our data we want to sort it so we can keep only the most important features\n    let inds = descending_abs_argsort(x)\n    let sorted_x = []\n    let sorted_y = []\n    let sorted_color = []\n    for (let k=0; k<Math.min(x.length,max_feature_number); k++){\n        sorted_x.unshift(x[inds[k]])\n        sorted_y.unshift(y[inds[k]])\n        sorted_color.unshift(color[inds[k]])\n    }\n    return [sorted_x, sorted_y, sorted_color]\n};\n\nlet x_range_min = 1000\nlet x_range_max = -1000\nlet data_y = {};\nlet data_x = {}\nlet data_color = {};\nfor (let i = 0; i < timestamp.length; i++) {\n    let [x, y, color] = extract_ith_lime_values(lime_values, lime_names, i)\n    if (x.length > 0 ){\n        data_y[timestamp[i]] = y;\n        data_x[timestamp[i]] = x;\n        data_color[timestamp[i]] = color;\n        if (Math.max(...x) > x_range_max){\n            x_range_max = Math.max(...x)\n        };\n        if (Math.min(...x) < x_range_min){\n            x_range_min = Math.min(...x)\n        }\n    };\n};\n\n\n\nlet frames = [];\nlet unique_timestamps = Object.keys(data_y);\nfor (let i = 0; i < unique_timestamps.length; i++) {\n    frames.push({\n        name: unique_timestamps[i],\n        data: [{\n            x: data_x[unique_timestamps[i]],\n            y: data_y[unique_timestamps[i]],\n            marker: { color: data_color[unique_timestamps[i]] }\n        }],\n    })\n};\n\n\n\nlet sliderSteps = [];\nfor (let i = 0; i < unique_timestamps.length; i++) {\n    sliderSteps.push({\n        method: 'animate',\n        label: full_timestamp_to_hour(unique_timestamps[i]),\n        args: [[unique_timestamps[i]], {\n            mode: 'immediate',\n            transition: { duration: 300 },\n            frame: { duration: 300, redraw: false },\n        }]\n    });\n}\n\nlet layout = {\n    sliders: [{\n        steps: sliderSteps\n    }],\n    xaxis: { range: [x_range_min - 0.1 * (x_range_max - x_range_min), x_range_max + 0.1 * (x_range_max - x_range_min)] }\n};\n\n\n\nlet trace = {\n    x: data_x[unique_timestamps[0]],\n    y: data_y[unique_timestamps[0]],\n    type: \"bar\",\n    orientation: \"h\",\n    marker: {\n        color: data_color[unique_timestamps[0]]\n    }\n};\n\nreturn {\n    data: [trace],\n    layout: layout,\n    frames: frames\n};\n"
      },
      "pluginVersion": "7.3.4",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT * FROM \"autogen\".\"features\" WHERE (\"patient\" =~ /^$patient$/) AND $timeFilter",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Lime feature importance",
      "type": "ae3e-plotly-panel"
    }
  ],
  "refresh": false,
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "00004671_s007_t000",
          "value": "00004671_s007_t000"
        },
        "datasource": "aura-influxDB",
        "definition": "",
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Patient",
        "multi": false,
        "name": "patient",
        "options": [],
        "query": "SHOW TAG VALUES WITH KEY=\"patient\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": [
            "max_hr",
            "mean_hr",
            "min_hr"
          ],
          "value": [
            "max_hr",
            "mean_hr",
            "min_hr"
          ]
        },
        "datasource": "aura-influxDB",
        "definition": "",
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": true,
        "name": "features",
        "options": [
          {
            "selected": false,
            "text": "Modified_csi",
            "value": "Modified_csi"
          },
          {
            "selected": false,
            "text": "csi",
            "value": "csi"
          },
          {
            "selected": false,
            "text": "cvi",
            "value": "cvi"
          },
          {
            "selected": false,
            "text": "cvnni",
            "value": "cvnni"
          },
          {
            "selected": false,
            "text": "cvsd",
            "value": "cvsd"
          },
          {
            "selected": false,
            "text": "filename",
            "value": "filename"
          },
          {
            "selected": false,
            "text": "hf",
            "value": "hf"
          },
          {
            "selected": false,
            "text": "index",
            "value": "index"
          },
          {
            "selected": false,
            "text": "interval_index",
            "value": "interval_index"
          },
          {
            "selected": false,
            "text": "interval_start_time",
            "value": "interval_start_time"
          },
          {
            "selected": false,
            "text": "label",
            "value": "label"
          },
          {
            "selected": false,
            "text": "lf",
            "value": "lf"
          },
          {
            "selected": false,
            "text": "lf_hf_ratio",
            "value": "lf_hf_ratio"
          },
          {
            "selected": true,
            "text": "max_hr",
            "value": "max_hr"
          },
          {
            "selected": true,
            "text": "mean_hr",
            "value": "mean_hr"
          },
          {
            "selected": false,
            "text": "mean_nni",
            "value": "mean_nni"
          },
          {
            "selected": false,
            "text": "median_nni",
            "value": "median_nni"
          },
          {
            "selected": true,
            "text": "min_hr",
            "value": "min_hr"
          },
          {
            "selected": false,
            "text": "model",
            "value": "model"
          },
          {
            "selected": false,
            "text": "nni_20",
            "value": "nni_20"
          },
          {
            "selected": false,
            "text": "nni_50",
            "value": "nni_50"
          },
          {
            "selected": false,
            "text": "pnni_20",
            "value": "pnni_20"
          },
          {
            "selected": false,
            "text": "pnni_50",
            "value": "pnni_50"
          },
          {
            "selected": false,
            "text": "predicted_label",
            "value": "predicted_label"
          },
          {
            "selected": false,
            "text": "range_nni",
            "value": "range_nni"
          },
          {
            "selected": false,
            "text": "ratio_sd2_sd1",
            "value": "ratio_sd2_sd1"
          },
          {
            "selected": false,
            "text": "rmssd",
            "value": "rmssd"
          },
          {
            "selected": false,
            "text": "sampen",
            "value": "sampen"
          },
          {
            "selected": false,
            "text": "sd1",
            "value": "sd1"
          },
          {
            "selected": false,
            "text": "sd2",
            "value": "sd2"
          },
          {
            "selected": false,
            "text": "sdnn",
            "value": "sdnn"
          },
          {
            "selected": false,
            "text": "sdsd",
            "value": "sdsd"
          },
          {
            "selected": false,
            "text": "std_hr",
            "value": "std_hr"
          },
          {
            "selected": false,
            "text": "vlf",
            "value": "vlf"
          }
        ],
        "query": "SHOW FIELD KEYS FROM features",
        "refresh": 0,
        "regex": "^((?!(shap_values|lime_values)).*)",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "2012-08-04T16:10:10.625Z",
    "to": "2012-08-04T16:21:19.775Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Patient | Doctor layout",
  "uid": "dctLyt",
  "version": 2
}